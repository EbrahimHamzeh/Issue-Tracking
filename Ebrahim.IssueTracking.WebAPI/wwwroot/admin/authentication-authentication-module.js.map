{"version":3,"sources":["webpack:///./src/app/authentication/access-denied/access-denied.component.html","webpack:///./src/app/authentication/login/login.component.html","webpack:///./src/app/authentication/access-denied/access-denied.component.css","webpack:///./src/app/authentication/access-denied/access-denied.component.ts","webpack:///./src/app/authentication/authentication-layout.component.ts","webpack:///./src/app/authentication/authentication-routing.module.ts","webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/login/login.component.css","webpack:///./src/app/authentication/login/login.component.ts","webpack:///./src/app/core/services/auth-guard.ts"],"names":[],"mappings":"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","file":"authentication-authentication-module.js","sourcesContent":["module.exports = \"<p>\\n  access-denied works!\\n</p>\\n\"","module.exports = \"<!-- <mat-toolbar dir=rtl color=\\\"primary\\\" style=\\\"height: 100vh;\\\">سیستم پشتیبانی</mat-toolbar>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"login-main\\\">\\n    <mat-card dir=rtl>\\n        <mat-card-header>\\n            <mat-card-title>ورود</mat-card-title>\\n        </mat-card-header>\\n        <form (ngSubmit)=\\\"onSubmit(form)\\\" #form=\\\"ngForm\\\"> \\n            <mat-card-content fxLayout=\\\"column\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"نام‌کاربری\\\" #username=\\\"ngModel\\\" required [(ngModel)]=\\\"model.username\\\">\\n                    <mat-error *ngIf=\\\"username.invalid && username.touched\\\">نام‌کاربری نا معتبر می‌باشد.</mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input type=\\\"password\\\" matInput placeholder=\\\"رمزعبور\\\" #password=\\\"ngModel\\\" required [(ngModel)]=\\\"model.password\\\">\\n                    <mat-error *ngIf=\\\"password.invalid && password.touched\\\">رمزعبور نا معتبر می‌باشد.</mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                     <input type=\\\"checkbox\\\"  #rememberMe=\\\"ngModel\\\" matInput [(ngModel)]=\\\"model.rememberMe\\\">مرا به ‌خاطر بسپار \\n                     <mat-checkbox #rememberMe=\\\"ngModel\\\" matInput [(ngModel)]=\\\"model.rememberMe\\\"></mat-checkbox>\\n                 </mat-form-field> \\n            </mat-card-content>\\n            <mat-card-actions>\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"form.invalid \\\">ورود</button>\\n            </mat-card-actions>\\n        </form>\\n    </mat-card>\\n</div> -->\\n\\n<mat-toolbar color=\\\"primary\\\">\\n    <span>سیستم پشتیبانی</span>\\n</mat-toolbar>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"login-main\\\">\\n    <mat-card class=\\\"my-card\\\">\\n        <mat-card-header>\\n            <mat-card-title>ورود</mat-card-title>\\n        </mat-card-header>\\n        <form (ngSubmit)=\\\"onSubmit(form)\\\" #form=\\\"ngForm\\\">\\n            <mat-card-content fxLayout=\\\"column\\\" dir=\\\"rtl\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"نام‌کاربری\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" required\\n                        [(ngModel)]=\\\"model.username\\\">\\n                    <mat-error *ngIf=\\\"username.invalid && username.touched\\\">نام‌کاربری نامعتبر می‌باشد.</mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input type=\\\"password\\\" matInput placeholder=\\\"رمزعبور\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required\\n                        [(ngModel)]=\\\"model.password\\\">\\n                    <mat-error *ngIf=\\\"password.invalid && password.touched\\\">رمزعبور نامعتبر می‌باشد.</mat-error>\\n                </mat-form-field>\\n                <mat-checkbox #rememberMe=\\\"ngModel\\\" name=\\\"rememberMe\\\" [(ngModel)]=\\\"model.rememberMe\\\">مرا به ‌خاطر بسپار\\n                </mat-checkbox>\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <button type=\\\"submit\\\" mat-raised-button [disabled]=\\\"form.invalid \\\" color=\\\"primary\\\">ورود</button>\\n            </mat-card-actions>\\n        </form>\\n    </mat-card>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2FjY2Vzcy1kZW5pZWQvYWNjZXNzLWRlbmllZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access-denied',\n  templateUrl: './access-denied.component.html',\n  styleUrls: ['./access-denied.component.css']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication-layout',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AuthenticationLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationLayoutComponent } from './authentication-layout.component';\nimport { LoginComponent } from './login/login.component';\nimport { AccessDeniedComponent } from './access-denied/access-denied.component';\nimport { AuthGuardPermission } from '../core/models/auth-guard-permission';\nimport { AuthGuard } from '../core/services/auth-guard';\n\nconst routes: Routes = [\n  {\n    path: 'user',\n    component: AuthenticationLayoutComponent,\n    children: [\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path: 'accessDenied', component: AccessDeniedComponent,\n          data: {\n            permission: {\n              permittedRoles: ['Admin', 'User']\n            } as AuthGuardPermission\n          },\n        canActivate: [AuthGuard]}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { AuthenticationLayoutComponent } from './authentication-layout.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { AccessDeniedComponent } from './access-denied/access-denied.component';\n\n@NgModule({\n  declarations: [LoginComponent, AuthenticationLayoutComponent, AccessDeniedComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AuthenticationRoutingModule\n  ]\n})\nexport class AuthenticationModule { }\n","module.exports = \".spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9hdXRoZW50aWNhdGlvbi9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNwYWNlciB7XHJcbiAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Credentials } from 'src/app/core/models/credentials';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model: Credentials = { username: '', password: '', rememberMe: false };\n  error = '';\n  returnUrl: string | null = null;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.authService.logout(false);\n\n    // tslint:disable-next-line:no-string-literal\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'];\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form);\n\n    this.error = '';\n    this.authService.login(this.model)\n      .subscribe(isLoggedIn => {\n        if (isLoggedIn) {\n          if (this.returnUrl) {\n            this.router.navigate([this.returnUrl]);\n          } else {\n            this.router.navigate(['/dashboard/panel/list']);\n          }\n        }\n      },\n        (error: HttpErrorResponse) => {\n          console.error('Login error', error);\n          if (error.status === 401) {\n            this.error = 'Invalid User name or Password. Please try again.';\n          } else {\n            this.error = `${error.statusText}: ${error.message}`;\n          }\n        });\n  }\n\n}\n","import { CanActivate, CanActivateChild, CanLoad, Router, ActivatedRouteSnapshot, RouterStateSnapshot, Data, Route } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { AuthGuardPermission } from '../models/auth-guard-permission';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n\n    private permissionObjectKey = 'permission';\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        const permissionData = route.data[this.permissionObjectKey] as AuthGuardPermission;\n        const returnUrl = state.url;\n        return this.hasAuthUserAccessToThisRoute(permissionData, returnUrl);\n    }\n\n    canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        const permissionData = childRoute.data[this.permissionObjectKey] as AuthGuardPermission;\n        const returnUrl = state.url;\n        return this.hasAuthUserAccessToThisRoute(permissionData, returnUrl);\n    }\n\n    canLoad(route: Route): boolean {\n        if (route.data) {\n            const permissionData = route.data[this.permissionObjectKey] as AuthGuardPermission;\n            const returnUrl = `/${route.path}`;\n            return this.hasAuthUserAccessToThisRoute(permissionData, returnUrl);\n        } else {\n            return true;\n        }\n    }\n\n    private hasAuthUserAccessToThisRoute(permissionData: Data, returnUrl: string): boolean {\n        if (!this.authService.isAuthUserLoggedIn()) {\n            this.showAccessDenied(returnUrl);\n            return false;\n        }\n\n        if (!permissionData) {\n            return true;\n        }\n\n        if (Array.isArray(permissionData.deniedRoles) && Array.isArray(permissionData.permittedRoles)) {\n            throw new Error('Don\\'t set both \"deniedRoles\" and \"permittedRoles\" in route data.');\n        }\n\n        if (Array.isArray(permissionData.permittedRoles)) {\n          const isInRole = this.authService.isAuthUserInRoles(permissionData.permittedRoles);\n          if (isInRole) {\n            return true;\n          }\n\n          this.showAccessDenied(returnUrl);\n          return false;\n        }\n\n        if (Array.isArray(permissionData.deniedRoles)) {\n            const isInRole = this.authService.isAuthUserInRoles(permissionData.deniedRoles);\n            if (!isInRole) {\n                return true;\n            }\n\n            this.showAccessDenied(returnUrl);\n            return false;\n        }\n\n        return true;\n    }\n\n    private showAccessDenied(returnUrl: string) {\n        // tslint:disable-next-line:object-literal-shorthand\n        this.router.navigate(['/accessDenied'], { queryParams: { returnUrl: returnUrl } });\n    }\n}\n"],"sourceRoot":""}