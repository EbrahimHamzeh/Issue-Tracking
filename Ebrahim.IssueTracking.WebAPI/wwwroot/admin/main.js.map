{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/shared/Layout/panel-layout/panel-layout.component.html","webpack:///./src/app/shared/component/header-menu/header-menu.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/auth.interceptor.ts","webpack:///./src/app/core/core-routing.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/models/auth-token-type.ts","webpack:///./src/app/core/services/api-config.service.ts","webpack:///./src/app/core/services/app.config.ts","webpack:///./src/app/core/services/auth.service.ts","webpack:///./src/app/core/services/browser-storage.service.ts","webpack:///./src/app/core/services/refresh-token.service.ts","webpack:///./src/app/core/services/token-store.service.ts","webpack:///./src/app/core/services/utils.service.ts","webpack:///./src/app/core/services/xsrf.interceptor.ts","webpack:///./src/app/shared/Layout/panel-layout/panel-layout.component.css","webpack:///./src/app/shared/Layout/panel-layout/panel-layout.component.ts","webpack:///./src/app/shared/component/header-menu/header-menu.component.css","webpack:///./src/app/shared/component/header-menu/header-menu.component.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./authentication/authentication.module\": [\n\t\t\"./src/app/authentication/authentication.module.ts\",\n\t\t\"authentication-authentication-module\"\n\t],\n\t\"./panel/dashboard/dashboard.module\": [\n\t\t\"./src/app/panel/dashboard/dashboard.module.ts\",\n\t\t\"panel-dashboard-dashboard-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<app-header-menu></app-header-menu>\\n\\n<router-outlet></router-outlet>\"","module.exports = \"<div style=\\\"height: 100vh;\\\">\\n    <mat-toolbar color=\\\"primary\\\" dir=\\\"rtl\\\">\\n      <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item>Item 1</button>\\n        <button mat-menu-item>Item 2</button>\\n      </mat-menu>\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\n        <mat-icon>more_vert</mat-icon>\\n      </button>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item>\\n          <mat-icon>dialpad</mat-icon>\\n          <span>Redial</span>\\n        </button>\\n        <button mat-menu-item disabled>\\n          <mat-icon>voicemail</mat-icon>\\n          <span>Check voice mail</span>\\n        </button>\\n        <button mat-menu-item>\\n          <mat-icon>notifications_off</mat-icon>\\n          <span>Disable alerts</span>\\n        </button>\\n      </mat-menu>\\n      <button mat-button [matMenuTriggerFor]=\\\"animals\\\">Animal index</button>\\n  \\n      <mat-menu #animals=\\\"matMenu\\\">\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"vertebrates\\\">Vertebrates</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"invertebrates\\\">Invertebrates</button>\\n      </mat-menu>\\n  \\n      <mat-menu #vertebrates=\\\"matMenu\\\">\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"fish\\\">Fishes</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"amphibians\\\">Amphibians</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"reptiles\\\">Reptiles</button>\\n        <button mat-menu-item>Birds</button>\\n        <button mat-menu-item>Mammals</button>\\n      </mat-menu>\\n  \\n      <mat-menu #invertebrates=\\\"matMenu\\\">\\n        <button mat-menu-item>Insects</button>\\n        <button mat-menu-item>Molluscs</button>\\n        <button mat-menu-item>Crustaceans</button>\\n        <button mat-menu-item>Corals</button>\\n        <button mat-menu-item>Arachnids</button>\\n        <button mat-menu-item>Velvet worms</button>\\n        <button mat-menu-item>Horseshoe crabs</button>\\n      </mat-menu>\\n  \\n      <mat-menu #fish=\\\"matMenu\\\">\\n        <button mat-menu-item>Baikal oilfish</button>\\n        <button mat-menu-item>Bala shark</button>\\n        <button mat-menu-item>Ballan wrasse</button>\\n        <button mat-menu-item>Bamboo shark</button>\\n        <button mat-menu-item>Banded killifish</button>\\n      </mat-menu>\\n  \\n      <mat-menu #amphibians=\\\"matMenu\\\">\\n        <button mat-menu-item>Sonoran desert toad</button>\\n        <button mat-menu-item>Western toad</button>\\n        <button mat-menu-item>Arroyo toad</button>\\n        <button mat-menu-item>Yosemite toad</button>\\n      </mat-menu>\\n  \\n      <mat-menu #reptiles=\\\"matMenu\\\">\\n        <button mat-menu-item>Banded Day Gecko</button>\\n        <button mat-menu-item>Banded Gila Monster</button>\\n        <button mat-menu-item>Black Tree Monitor</button>\\n        <button mat-menu-item>Blue Spiny Lizard</button>\\n        <button mat-menu-item disabled>Velociraptor</button>\\n      </mat-menu>\\n  \\n      <span class=\\\"example-spacer\\\"></span>\\n  \\n      <div fxShow=\\\"true\\\" fxHide.lt-md=\\\"true\\\">\\n        <a href=\\\"#\\\" mat-button>کاربران</a>\\n        <a href=\\\"#\\\" mat-button>کارشناسان</a>\\n        <a href=\\\"#\\\" mat-button>تیکت‌ها</a>\\n        <a [routerLink]=\\\"['/dashboard/panel/list'] \\\"mat-button>داشبورد</a>\\n        <a href=\\\"#\\\" mat-button>تنظیمات</a>\\n        <a (click)=\\\"logout()\\\" mat-button>خروج</a>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n          <button mat-menu-item>\\n            <mat-icon>dialpad</mat-icon>\\n            <span>Redial</span>\\n          </button>\\n          <button mat-menu-item disabled>\\n            <mat-icon>voicemail</mat-icon>\\n            <span>Check voice mail</span>\\n          </button>\\n          <button mat-menu-item>\\n            <mat-icon>notifications_off</mat-icon>\\n            <span>Disable alerts</span>\\n          </button>\\n        </mat-menu>\\n      </div>\\n      <span>سیستم پشتیبانی</span>\\n    </mat-toolbar>\\n  </div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'authentication', loadChildren: './authentication/authentication.module#AuthenticationModule' },\n  { path: 'dashboard',      loadChildren: './panel/dashboard/dashboard.module#DashboardModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TokenStoreService } from './services/token-store.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { AuthTokenType } from './models/auth-token-type';\r\nimport { retryWhen, mergeMap, take, catchError, delay } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    private delayBetweenRetriesMs = 1000;\r\n    private numberOfRetries = 3;\r\n    private authorizationHeader = 'Authorization';\r\n\r\n    constructor(\r\n        private tokenStorageService: TokenStoreService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const accessToken = this.tokenStorageService.getRawAuthToken(AuthTokenType.AccessToken);\r\n        if (accessToken) {\r\n            request = request.clone({\r\n                headers: request.headers.set(this.authorizationHeader, `Bearer ${accessToken}`)\r\n            });\r\n            return next.handle(request).pipe(\r\n                retryWhen(errors => errors.pipe(\r\n                    mergeMap((error: HttpErrorResponse, retryAttempt: number) => {\r\n                        if (retryAttempt === this.numberOfRetries - 1) {\r\n                            console.log(`HTTP call '${request.method} ${request.url}' failed after ${this.numberOfRetries} retries.`);\r\n                            return throwError(error); // no retry\r\n                        }\r\n\r\n                        switch (error.status) {\r\n                            case 400:\r\n                            case 404:\r\n                                return throwError(error); // no retry\r\n                        }\r\n\r\n                        return of(error); // retry\r\n                    }),\r\n                    delay(this.delayBetweenRetriesMs),\r\n                    take(this.numberOfRetries)\r\n                )),\r\n                catchError((error: any, caught: Observable<HttpEvent<any>>) => {\r\n                    console.error({ error, caught });\r\n                    if (error.status === 401 || error.status === 403) {\r\n                        const newRequest = this.getNewAuthRequest(request);\r\n                        if (newRequest) {\r\n                            console.log('Try new AuthRequest ...');\r\n                            return next.handle(newRequest);\r\n                        }\r\n                        this.router.navigate(['/authentication/user/accessDenied']);\r\n                    }\r\n                    return throwError(error);\r\n                })\r\n            );\r\n        } else {\r\n            // login page\r\n            return next.handle(request);\r\n        }\r\n    }\r\n\r\n    getNewAuthRequest(request: HttpRequest<any>): HttpRequest<any> | null {\r\n        const newStoredToken = this.tokenStorageService.getRawAuthToken(AuthTokenType.AccessToken);\r\n        const requestAccessTokenHeader = request.headers.get(this.authorizationHeader);\r\n        if (!newStoredToken || !requestAccessTokenHeader) {\r\n            // tslint:disable-next-line:max-line-length\r\n            console.log('There is no new AccessToken.', {\r\n                // tslint:disable-next-line:object-literal-shorthand\r\n                requestAccessTokenHeader: requestAccessTokenHeader,\r\n                // tslint:disable-next-line:object-literal-shorthand\r\n                newStoredToken: newStoredToken\r\n            });\r\n            return null;\r\n        }\r\n        const newAccessTokenHeader = `Bearer ${newStoredToken}`;\r\n        if (requestAccessTokenHeader === newAccessTokenHeader) {\r\n            // tslint:disable-next-line:max-line-length\r\n            console.log('There is no new AccessToken.', {\r\n                // tslint:disable-next-line:object-literal-shorthand\r\n                requestAccessTokenHeader: requestAccessTokenHeader,\r\n                // tslint:disable-next-line:object-literal-shorthand\r\n                newAccessTokenHeader: newAccessTokenHeader\r\n            });\r\n            return null;\r\n        }\r\n\r\n        return request.clone({ headers: request.headers.set(this.authorizationHeader, newAccessTokenHeader) });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule { }\n","import { NgModule, Optional, SkipSelf, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreRoutingModule } from './core-routing.module';\nimport { APP_CONFIG, AppConfig } from './services/app.config';\nimport { ApiConfigService } from './services/api-config.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { XsrfInterceptor } from './services/xsrf.interceptor';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreRoutingModule\n  ],\n  exports: [\n    // components that are used in app.component.ts will be listed here.\n  ],\n  declarations: [\n    // components that are used in app.component.ts will be listed here.\n  ],\n  providers: [\n    /* ``No`` global singleton services of the whole app should be listed here anymore!\n       Since they'll be already provided in AppModule using the `tree-shakable providers` of Angular 6.x+ (providedIn: 'root').\n       This new feature allows cleaning up the providers section from the CoreModule.\n       But if you want to provide something with an InjectionToken other that its class, you still have to use this section.\n    */\n    {\n      provide: APP_CONFIG,\n      useValue: AppConfig\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: XsrfInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (config: ApiConfigService) => () => config.loadApiConfig(),\n      deps: [ApiConfigService],\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('CoreModule should be imported ONLY in AppModule.');\n    }\n  }\n}\n","export enum AuthTokenType {\n  AccessToken,\n  RefreshToken\n}\n","import { Injectable, Injector, Inject } from '@angular/core';\nimport { IAppConfig, APP_CONFIG } from './app.config';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiConfigService {\n  private config: IApiConfig | null = null;\n\n  constructor(\n    private injector: Injector,\n    @Inject(APP_CONFIG) private appConfig: IAppConfig) { }\n\n  loadApiConfig(): Promise<any> {\n    const http = this.injector.get<HttpClient>(HttpClient);\n    const url = `${this.appConfig.apiEndpoint}/${this.appConfig.apiSettingsPath}`;\n    return http.get<IApiConfig>(url)\n      .toPromise()\n      .then(config => {\n        this.config = config;\n        console.log('ApiConfig', this.config);\n      })\n      .catch(err => {\n        console.error(`Failed to loadApiConfig(). Make sure ${url} is accessible.`, this.config);\n        return Promise.reject(err);\n      });\n  }\n\n  get configuration(): IApiConfig {\n    if (!this.config) {\n      throw new Error('Attempted to access configuration property before configuration data was loaded.');\n    }\n    return this.config;\n  }\n}\n\nexport interface IApiConfig {\n  loginPath: string;\n  logoutPath: string;\n  refreshTokenPath: string;\n  accessTokenObjectKey: string;\n  refreshTokenObjectKey: string;\n  adminRoleName: string;\n}\n","import { InjectionToken } from '@angular/core';\n\nexport let APP_CONFIG = new InjectionToken<string>('app.config');\n\nexport interface IAppConfig {\n    apiEndpoint: string;\n    apiSettingsPath: string;\n}\n\nexport const AppConfig: IAppConfig = {\n    apiEndpoint: '/api',\n    apiSettingsPath: 'ApiSettings'\n};\n","import { Injectable, Inject } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, finalize, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { APP_CONFIG, IAppConfig } from './app.config';\nimport { ApiConfigService } from './api-config.service';\nimport { TokenStoreService } from './token-store.service';\nimport { Credentials } from '../models/credentials';\nimport { AuthUser } from '../models/auth-user';\nimport { RefreshTokenService } from './refresh-token.service';\nimport { AuthTokenType } from '../models/auth-token-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private authStatusSource = new BehaviorSubject<boolean>(false);\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    @Inject(APP_CONFIG) private appConfig: IAppConfig,\n    private apiConfigService: ApiConfigService,\n    private tokenStoreService: TokenStoreService,\n    private refreshTokenService: RefreshTokenService\n  ) { }\n\n  login(credentials: Credentials): Observable<boolean> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http\n      .post(`${this.appConfig.apiEndpoint}/${this.apiConfigService.configuration.loginPath}`,\n        credentials, { headers })\n      .pipe(\n        map((response: any) => {\n          this.tokenStoreService.setRememberMe(credentials.rememberMe);\n          if (!response) {\n            console.error('There is no `{\\'' + this.apiConfigService.configuration.accessTokenObjectKey +\n              '\\':\\'...\\',\\'' + this.apiConfigService.configuration.refreshTokenObjectKey + '\\':\\'...value...\\'}` response after login.');\n            this.authStatusSource.next(false);\n            return false;\n          }\n          this.tokenStoreService.storeLoginSession(response);\n          console.log('Logged-in user info', this.getAuthUser);\n          this.refreshTokenService.scheduleRefreshtoken(true, true);\n          this.authStatusSource.next(true);\n          return true;\n        }),\n        catchError((error: HttpErrorResponse) => throwError(error))\n      );\n  }\n\n  logout(navigateToHome: boolean): void {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const refreshToken = encodeURIComponent(this.tokenStoreService.getRawAuthToken(AuthTokenType.RefreshToken));\n\n    this.http\n      .get(`${this.appConfig.apiEndpoint}/${this.apiConfigService.configuration.logoutPath}?refreshToken=${refreshToken}`,\n        { headers })\n      .pipe(\n        map(response => response || {}),\n        catchError((error: HttpErrorResponse) => throwError(error)),\n        finalize(() => {\n          this.tokenStoreService.deleteAuthTokens();\n          this.refreshTokenService.unscheduleRefreshtoken(true);\n          this.authStatusSource.next(false);\n          if (navigateToHome) {\n            this.router.navigate(['/authentication/user/login']);\n          }\n        })\n      )\n      .subscribe(result => {\n        console.log('logout', result);\n      });\n  }\n\n  isAuthUserInRoles(requiredRoles: string[]): boolean {\n    const user = this.getAuthUser();\n    if (!user || !user.roles) {\n      return false;\n    }\n\n    if (user.roles.indexOf(this.apiConfigService.configuration.adminRoleName.toLocaleLowerCase()) >= 0) {\n      return true;\n    }\n    return requiredRoles.some(requiredRole => {\n      if (user.roles) {\n        return user.roles.indexOf(requiredRole.toLowerCase()) >= 0;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  isAuthUserLoggedIn(): boolean {\n    return this.tokenStoreService.hasStoredAccessAndRefreshTokens() &&\n      !this.tokenStoreService.isAccessTokenExpired();\n  }\n\n  getAuthUser(): AuthUser | null {\n    if (!this.isAuthUserLoggedIn()) {\n      return null;\n    }\n\n    const decodedToken = this.tokenStoreService.getDecodedAccessToken();\n    const roles = this.tokenStoreService.getDecodedTokenRoles();\n    return Object.freeze({\n      userId: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'],\n      userName: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'],\n      displayName: decodedToken.DisplayName,\n      roles\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrowserStorageService {\n  getSession(key: string): any {\n    const data = window.sessionStorage.getItem(key);\n    if (data) {\n      return JSON.parse(data);\n    } else {\n      return null;\n    }\n  }\n\n  setSession(key: string, value: any): void {\n    const data = value === undefined ? '' : JSON.stringify(value);\n    window.sessionStorage.setItem(key, data);\n  }\n\n  removeSession(key: string): void {\n    window.sessionStorage.removeItem(key);\n  }\n\n  removeAllSessions(): void {\n    for (const key in window.sessionStorage) {\n      if (window.sessionStorage.hasOwnProperty(key)) {\n        this.removeSession(key);\n      }\n    }\n  }\n\n  getLocal(key: string): any {\n    const data = window.localStorage.getItem(key);\n    if (data) {\n      return JSON.parse(data);\n    } else {\n      return null;\n    }\n  }\n\n  setLocal(key: string, value: any): void {\n    const data = value === undefined ? '' : JSON.stringify(value);\n    window.localStorage.setItem(key, data);\n  }\n\n  removeLocal(key: string): void {\n    window.localStorage.removeItem(key);\n  }\n\n  removeAllLocals(): void {\n    for (const key in window.localStorage) {\n      if (window.localStorage.hasOwnProperty(key)) {\n        this.removeLocal(key);\n      }\n    }\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Subscription, throwError, timer } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\nimport { TokenStoreService } from './token-store.service';\nimport { APP_CONFIG, IAppConfig } from './app.config';\nimport { ApiConfigService } from './api-config.service';\nimport { BrowserStorageService } from './browser-storage.service';\nimport { UtilsService } from './utils.service';\nimport { AuthTokenType } from '../models/auth-token-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RefreshTokenService {\n\n  private refreshTokenTimerCheckId = 'is_refreshToken_timer_started';\n  private refreshTokenSubscription: Subscription | null = null;\n\n  constructor(\n    private tokenStorageService: TokenStoreService,\n    @Inject(APP_CONFIG) private appConfig: IAppConfig,\n    private apiConfigService: ApiConfigService,\n    private http: HttpClient,\n    private browserStorageService: BrowserStorageService,\n    private utilsService: UtilsService\n  ) { }\n\n  scheduleRefreshtoken(isAuthUserLoggedIn: boolean, calledFromLogin: boolean) {\n    this.unscheduleRefreshtoken(false);\n\n    if (!isAuthUserLoggedIn) {\n      return;\n    }\n\n    const expDateUtc = this.tokenStorageService.getAccessTokenExpirationDateUtc();\n    if (!expDateUtc) {\n      throw new Error('This access token has not the \"exp\" property.');\n    }\n\n    const expiresAtUtc = expDateUtc.valueOf();\n    const nowUtc = new Date().valueOf();\n    const threeSeconds = 3000;\n\n    const initialDelay = Math.max(threeSeconds, expiresAtUtc - nowUtc - threeSeconds);\n    console.log('Initial scheduleRefreshToken Delay(ms)', initialDelay);\n    const timerSource$ = timer(initialDelay);\n    this.refreshTokenSubscription = timerSource$.subscribe(() => {\n      if (calledFromLogin) {\n        this.refreshToken(isAuthUserLoggedIn);\n      } else {\n        this.scheduleRefreshtoken(isAuthUserLoggedIn, false);\n      }\n    });\n\n    if (calledFromLogin) {\n      this.setRefreshTokenTimerStarted();\n    }\n  }\n\n  private setRefreshTokenTimerStarted(): void {\n    this.browserStorageService.setLocal(this.refreshTokenTimerCheckId,\n      { isStarted: true }\n    );\n  }\n\n  unscheduleRefreshtoken(cancelTimerCheckToken: boolean) {\n    if (this.refreshTokenSubscription) {\n      this.refreshTokenSubscription.unsubscribe();\n    }\n\n    if (cancelTimerCheckToken) {\n      this.deleteRefreshTokenTimerCheckId();\n    }\n  }\n\n  private refreshToken(isAuthUserLoggedIn: boolean) {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const model = { refreshToken: this.tokenStorageService.getRawAuthToken(AuthTokenType.RefreshToken) };\n    return this.http\n      .post(`${this.appConfig.apiEndpoint}/${this.apiConfigService.configuration.refreshTokenPath}`,\n        model, { headers })\n      .pipe(\n        map(response => response || {}),\n        catchError((error: HttpErrorResponse) => throwError(error)))\n      .subscribe(result => {\n        console.log('RefreshToken Result', result);\n        this.tokenStorageService.storeLoginSession(result);\n        this.scheduleRefreshtoken(isAuthUserLoggedIn, false);\n      });\n  }\n\n  private deleteRefreshTokenTimerCheckId() {\n    this.browserStorageService.removeLocal(this.refreshTokenTimerCheckId);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as jwt_decode from 'jwt-decode';\n\nimport { BrowserStorageService } from './browser-storage.service';\nimport { ApiConfigService } from './api-config.service';\nimport { AuthTokenType } from '../models/auth-token-type';\nimport { UtilsService } from './utils.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStoreService {\n\n  private rememberMeToken = 'rememberMe_token';\n\n  constructor(\n    private browserStorageService: BrowserStorageService,\n    private utilsService: UtilsService,\n    private apiConfigService: ApiConfigService\n  ) { }\n\n  // برای بیرون کشیدن اطلاعات توکن از حافطه مرورگر\n  getRawAuthToken(tokenType: AuthTokenType): string {\n    if (this.rememberMe()) {\n      return this.browserStorageService.getLocal(AuthTokenType[tokenType]);\n    } else {\n      return this.browserStorageService.getSession(AuthTokenType[tokenType]);\n    }\n  }\n\n  // برای دیکد کردن اطلاعات توکن ارسالی از سرور\n  getDecodedAccessToken(): any {\n    return jwt_decode(this.getRawAuthToken(AuthTokenType.AccessToken));\n  }\n\n  // نمایش نام نمایشی کاربر\n  getAuthUserDisplayName(): string {\n    return this.getDecodedAccessToken().DisplayName;\n  }\n\n  // تشخیص تاریخ از بین رفتن اعتبار توکن\n  getAccessTokenExpirationDateUtc(): Date | null {\n    const decode = this.getDecodedAccessToken();\n    if (decode.exp === undefined) {\n      return null;\n    }\n    const date = new Date(0); // The 0 sets the date to the epoch\n    date.setUTCSeconds(decode.exp);\n    return date;\n  }\n\n  // اگر اعتبار توکن تموم شده باشه boolean  برمیگردونه\n  isAccessTokenExpired(): boolean {\n    const expirationDateUtc = this.getAccessTokenExpirationDateUtc();\n    if (!expirationDateUtc) {\n      return true;\n    }\n\n    return !(expirationDateUtc.valueOf() > new Date().valueOf());\n  }\n\n  // ثبت توکن برای اساس مرابه خاطربسپار\n  setToken(tokenType: AuthTokenType, tokenValue: string): void {\n    if (this.utilsService.isEmptyString(tokenValue)) {\n      console.error(`${AuthTokenType[tokenType]} is null or empty.`);\n    }\n\n    if (tokenType === AuthTokenType.AccessToken && this.utilsService.isEmptyString(tokenValue)) {\n      throw new Error('AccessToken can\\'t be null or empty.');\n    }\n\n    if (this.rememberMe()) {\n      this.browserStorageService.setLocal(AuthTokenType[tokenType], tokenValue);\n    } else {\n      this.browserStorageService.setSession(AuthTokenType[tokenType], tokenValue);\n    }\n  }\n\n  getDecodedTokenRoles(): string[] | null {\n    const decodedToken = this.getDecodedAccessToken();\n    const roles = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n    if (!roles) {\n      return null;\n    }\n\n    if (Array.isArray(roles)) {\n      return roles.map(role => role.toLowerCase());\n    } else {\n      return [roles.toLowerCase()];\n    }\n  }\n\n  // ذخیره توکن ها\n  storeLoginSession(response: any): void {\n    this.setToken(AuthTokenType.AccessToken, response[this.apiConfigService.configuration.accessTokenObjectKey]);\n    this.setToken(AuthTokenType.RefreshToken, response[this.apiConfigService.configuration.refreshTokenObjectKey]);\n  }\n\n  // حذف توکن های اعتبار سنجی\n  deleteAuthTokens() {\n    if (this.rememberMe()) {\n      this.browserStorageService.removeLocal(AuthTokenType[AuthTokenType.AccessToken]);\n      this.browserStorageService.removeLocal(AuthTokenType[AuthTokenType.RefreshToken]);\n    } else {\n      this.browserStorageService.removeSession(AuthTokenType[AuthTokenType.AccessToken]);\n      this.browserStorageService.removeSession(AuthTokenType[AuthTokenType.RefreshToken]);\n    }\n    this.browserStorageService.removeLocal(this.rememberMeToken);\n  }\n\n  // آیا گزینه مرا به خاطر بسپار را کاربر انتخاب کرده است؟\n  rememberMe(): boolean {\n    return this.browserStorageService.getLocal(this.rememberMeToken) === true;\n  }\n\n  // مقدار دهی مرا به خاطر بسپار\n  setRememberMe(value: boolean): void {\n    this.browserStorageService.setLocal(this.rememberMeToken, value);\n  }\n\n  // آیا مقدار توکنها ذخیره شده است؟\n  hasStoredAccessAndRefreshTokens(): boolean {\n    const accessToken = this.getRawAuthToken(AuthTokenType.AccessToken);\n    const refreshToken = this.getRawAuthToken(AuthTokenType.RefreshToken);\n\n    return !this.utilsService.isEmptyString(accessToken) && !this.utilsService.isEmptyString(refreshToken);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor() { }\n\n  isEmptyString(value: string): boolean {\n    return !value || 0 === value.length;\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpXsrfTokenExtractor } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class XsrfInterceptor implements HttpInterceptor { // Handles absolute URLs\r\n\r\n  constructor(private tokenExtractor: HttpXsrfTokenExtractor) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    /*\r\n        const lcUrl = request.url.toLowerCase();\r\n        if (request.method === \"GET\" || request.method === \"HEAD\" ||\r\n          lcUrl.startsWith(\"http://\") || lcUrl.startsWith(\"https://\")) {\r\n          console.log(\"Original HttpXsrfInterceptor skips both non-mutating requests and absolute URLs.\");\r\n          console.log(\"Skipped request\", { lcUrl: lcUrl, method: request.method });\r\n        }\r\n    */\r\n    if (request.method === 'POST') {\r\n      const headerName = 'X-XSRF-TOKEN';\r\n      const token = this.tokenExtractor.getToken();\r\n      if (token && !request.headers.has(headerName)) {\r\n        request = request.clone({\r\n          headers: request.headers.set(headerName, token)\r\n        });\r\n      }\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","module.exports = \".example-icon {\\r\\n  padding: 0 14px;\\r\\n}\\r\\n\\r\\n.example-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL0xheW91dC9wYW5lbC1sYXlvdXQvcGFuZWwtbGF5b3V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9MYXlvdXQvcGFuZWwtbGF5b3V0L3BhbmVsLWxheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtaWNvbiB7XHJcbiAgcGFkZGluZzogMCAxNHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1zcGFjZXIge1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-panel-layout',\n  styleUrls: [ './panel-layout.component.css'],\n  templateUrl: './panel-layout.component.html',\n})\nexport class PanelLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnQvaGVhZGVyLW1lbnUvaGVhZGVyLW1lbnUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-header-menu',\n  templateUrl: './header-menu.component.html',\n  styleUrls: ['./header-menu.component.css']\n})\nexport class HeaderMenuComponent implements OnInit, OnDestroy {\n\n  isLoggedIn = false;\n  subscription: Subscription | null = null;\n  displayName = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.subscription = this.authService.authStatus$.subscribe(status => {\n      this.isLoggedIn = status;\n      if (status) {\n        const authUser = this.authService.getAuthUser();\n        this.displayName = authUser ? authUser.displayName : '';\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  logout() {\n    this.authService.logout(true);\n  }\n\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    CdkTableModule\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    CdkTableModule\n  ]\n})\nexport class MaterialModule { }\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material/material.module';\nimport { PanelLayoutComponent } from './Layout/panel-layout/panel-layout.component';\nimport { RouterModule } from '@angular/router';\nimport { HeaderMenuComponent } from './component/header-menu/header-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    HttpClientModule,\n    MaterialModule,\n    FlexLayoutModule,\n  ],\n  entryComponents: [\n    // All components about to be loaded \"dynamically\" need to be declared in the entryComponents section.\n  ],\n  declarations: [\n    HeaderMenuComponent,\n    PanelLayoutComponent\n    // common and shared components/directives/pipes between more than one module and components will be listed here.\n  ],\n  exports: [\n    // common and shared components/directives/pipes between more than one module and components will be listed here.\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    MaterialModule,\n    PanelLayoutComponent\n  ]\n})\nexport class SharedModule {\n  static forRoot(): ModuleWithProviders {\n    // Forcing the whole app to use the returned providers from the AppModule only.\n    return {\n      ngModule: SharedModule,\n      providers: [ /* All of your services here. It will hold the services needed by `itself`. */]\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}