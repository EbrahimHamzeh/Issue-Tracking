{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/shared/Layout/panel-layout/panel-layout.component.html","webpack:///./src/app/shared/component/header-menu/header-menu.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core-routing.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/services/api-config.service.ts","webpack:///./src/app/core/services/app.config.ts","webpack:///./src/app/shared/Layout/panel-layout/panel-layout.component.css","webpack:///./src/app/shared/Layout/panel-layout/panel-layout.component.ts","webpack:///./src/app/shared/component/header-menu/header-menu.component.css","webpack:///./src/app/shared/component/header-menu/header-menu.component.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./authentication/authentication.module\": [\n\t\t\"./src/app/authentication/authentication.module.ts\",\n\t\t\"authentication-authentication-module\"\n\t],\n\t\"./panel/dashboard/dashboard.module\": [\n\t\t\"./src/app/panel/dashboard/dashboard.module.ts\",\n\t\t\"panel-dashboard-dashboard-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<app-header-menu></app-header-menu>\\n\\n<router-outlet></router-outlet>\"","module.exports = \"<div style=\\\"height: 100vh;\\\">\\n    <mat-toolbar color=\\\"primary\\\" dir=\\\"rtl\\\">\\n      <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item>Item 1</button>\\n        <button mat-menu-item>Item 2</button>\\n      </mat-menu>\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\n        <mat-icon>more_vert</mat-icon>\\n      </button>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item>\\n          <mat-icon>dialpad</mat-icon>\\n          <span>Redial</span>\\n        </button>\\n        <button mat-menu-item disabled>\\n          <mat-icon>voicemail</mat-icon>\\n          <span>Check voice mail</span>\\n        </button>\\n        <button mat-menu-item>\\n          <mat-icon>notifications_off</mat-icon>\\n          <span>Disable alerts</span>\\n        </button>\\n      </mat-menu>\\n      <button mat-button [matMenuTriggerFor]=\\\"animals\\\">Animal index</button>\\n  \\n      <mat-menu #animals=\\\"matMenu\\\">\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"vertebrates\\\">Vertebrates</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"invertebrates\\\">Invertebrates</button>\\n      </mat-menu>\\n  \\n      <mat-menu #vertebrates=\\\"matMenu\\\">\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"fish\\\">Fishes</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"amphibians\\\">Amphibians</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"reptiles\\\">Reptiles</button>\\n        <button mat-menu-item>Birds</button>\\n        <button mat-menu-item>Mammals</button>\\n      </mat-menu>\\n  \\n      <mat-menu #invertebrates=\\\"matMenu\\\">\\n        <button mat-menu-item>Insects</button>\\n        <button mat-menu-item>Molluscs</button>\\n        <button mat-menu-item>Crustaceans</button>\\n        <button mat-menu-item>Corals</button>\\n        <button mat-menu-item>Arachnids</button>\\n        <button mat-menu-item>Velvet worms</button>\\n        <button mat-menu-item>Horseshoe crabs</button>\\n      </mat-menu>\\n  \\n      <mat-menu #fish=\\\"matMenu\\\">\\n        <button mat-menu-item>Baikal oilfish</button>\\n        <button mat-menu-item>Bala shark</button>\\n        <button mat-menu-item>Ballan wrasse</button>\\n        <button mat-menu-item>Bamboo shark</button>\\n        <button mat-menu-item>Banded killifish</button>\\n      </mat-menu>\\n  \\n      <mat-menu #amphibians=\\\"matMenu\\\">\\n        <button mat-menu-item>Sonoran desert toad</button>\\n        <button mat-menu-item>Western toad</button>\\n        <button mat-menu-item>Arroyo toad</button>\\n        <button mat-menu-item>Yosemite toad</button>\\n      </mat-menu>\\n  \\n      <mat-menu #reptiles=\\\"matMenu\\\">\\n        <button mat-menu-item>Banded Day Gecko</button>\\n        <button mat-menu-item>Banded Gila Monster</button>\\n        <button mat-menu-item>Black Tree Monitor</button>\\n        <button mat-menu-item>Blue Spiny Lizard</button>\\n        <button mat-menu-item disabled>Velociraptor</button>\\n      </mat-menu>\\n  \\n      <span class=\\\"example-spacer\\\"></span>\\n  \\n      <div fxShow=\\\"true\\\" fxHide.lt-md=\\\"true\\\">\\n        <a href=\\\"#\\\" mat-button>کاربران</a>\\n        <a href=\\\"#\\\" mat-button>کارشناسان</a>\\n        <a href=\\\"#\\\" mat-button>تیکت‌ها</a>\\n        <a [routerLink]=\\\"['/dashboard/panel/list'] \\\"mat-button>داشبورد</a>\\n        <a href=\\\"#\\\" mat-button>تنظیمات</a>\\n        <a href=\\\"#\\\" mat-button>خروج</a>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n          <button mat-menu-item>\\n            <mat-icon>dialpad</mat-icon>\\n            <span>Redial</span>\\n          </button>\\n          <button mat-menu-item disabled>\\n            <mat-icon>voicemail</mat-icon>\\n            <span>Check voice mail</span>\\n          </button>\\n          <button mat-menu-item>\\n            <mat-icon>notifications_off</mat-icon>\\n            <span>Disable alerts</span>\\n          </button>\\n        </mat-menu>\\n      </div>\\n      <span>سیستم پشتیبانی</span>\\n    </mat-toolbar>\\n  </div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'authentication', loadChildren: './authentication/authentication.module#AuthenticationModule' },\n  { path: 'dashboard',      loadChildren: './panel/dashboard/dashboard.module#DashboardModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule { }\n","import { NgModule, Optional, SkipSelf, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreRoutingModule } from './core-routing.module';\nimport { APP_CONFIG, AppConfig } from './services/app.config';\nimport { ApiConfigService } from './services/api-config.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreRoutingModule\n  ],\n  exports: [\n    // components that are used in app.component.ts will be listed here.\n  ],\n  declarations: [\n    // components that are used in app.component.ts will be listed here.\n  ],\n  providers: [\n    /* ``No`` global singleton services of the whole app should be listed here anymore!\n       Since they'll be already provided in AppModule using the `tree-shakable providers` of Angular 6.x+ (providedIn: 'root').\n       This new feature allows cleaning up the providers section from the CoreModule.\n       But if you want to provide something with an InjectionToken other that its class, you still have to use this section.\n    */\n    {\n      provide: APP_CONFIG,\n      useValue: AppConfig\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (config: ApiConfigService) => () => config.loadApiConfig(),\n      deps: [ApiConfigService],\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('CoreModule should be imported ONLY in AppModule.');\n    }\n  }\n}\n","import { Injectable, Injector, Inject } from '@angular/core';\nimport { IAppConfig, APP_CONFIG } from './app.config';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiConfigService {\n  private config: IApiConfig | null = null;\n\n  constructor(\n    private injector: Injector,\n    @Inject(APP_CONFIG) private appConfig: IAppConfig) { }\n\n  loadApiConfig(): Promise<any> {\n    const http = this.injector.get<HttpClient>(HttpClient);\n    const url = `${this.appConfig.apiEndpoint}/${this.appConfig.apiSettingsPath}`;\n    return http.get<IApiConfig>(url)\n      .toPromise()\n      .then(config => {\n        this.config = config;\n        console.log('ApiConfig', this.config);\n      })\n      .catch(err => {\n        console.error(`Failed to loadApiConfig(). Make sure ${url} is accessible.`, this.config);\n        return Promise.reject(err);\n      });\n  }\n\n  get configuration(): IApiConfig {\n    if (!this.config) {\n      throw new Error('Attempted to access configuration property before configuration data was loaded.');\n    }\n    return this.config;\n  }\n}\n\nexport interface IApiConfig {\n  loginPath: string;\n  logoutPath: string;\n  refreshTokenPath: string;\n  accessTokenObjectKey: string;\n  refreshTokenObjectKey: string;\n  adminRoleName: string;\n}\n","import { InjectionToken } from '@angular/core';\n\nexport let APP_CONFIG = new InjectionToken<string>('app.config');\n\nexport interface IAppConfig {\n    apiEndpoint: string;\n    apiSettingsPath: string;\n}\n\nexport const AppConfig: IAppConfig = {\n    apiEndpoint: '/api',\n    apiSettingsPath: 'ApiSettings'\n};\n","module.exports = \".example-icon {\\r\\n  padding: 0 14px;\\r\\n}\\r\\n\\r\\n.example-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL0xheW91dC9wYW5lbC1sYXlvdXQvcGFuZWwtbGF5b3V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9MYXlvdXQvcGFuZWwtbGF5b3V0L3BhbmVsLWxheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtaWNvbiB7XHJcbiAgcGFkZGluZzogMCAxNHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1zcGFjZXIge1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-panel-layout',\n  styleUrls: [ './panel-layout.component.css'],\n  templateUrl: './panel-layout.component.html',\n})\nexport class PanelLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnQvaGVhZGVyLW1lbnUvaGVhZGVyLW1lbnUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-menu',\n  templateUrl: './header-menu.component.html',\n  styleUrls: ['./header-menu.component.css']\n})\nexport class HeaderMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    CdkTableModule\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    CdkTableModule\n  ]\n})\nexport class MaterialModule { }\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material/material.module';\nimport { PanelLayoutComponent } from './Layout/panel-layout/panel-layout.component';\nimport { RouterModule } from '@angular/router';\nimport { HeaderMenuComponent } from './component/header-menu/header-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    HttpClientModule,\n    MaterialModule,\n    FlexLayoutModule,\n  ],\n  entryComponents: [\n    // All components about to be loaded \"dynamically\" need to be declared in the entryComponents section.\n  ],\n  declarations: [\n    HeaderMenuComponent,\n    PanelLayoutComponent\n    // common and shared components/directives/pipes between more than one module and components will be listed here.\n  ],\n  exports: [\n    // common and shared components/directives/pipes between more than one module and components will be listed here.\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    MaterialModule,\n    PanelLayoutComponent\n  ]\n})\nexport class SharedModule {\n  static forRoot(): ModuleWithProviders {\n    // Forcing the whole app to use the returned providers from the AppModule only.\n    return {\n      ngModule: SharedModule,\n      providers: [ /* All of your services here. It will hold the services needed by `itself`. */]\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}